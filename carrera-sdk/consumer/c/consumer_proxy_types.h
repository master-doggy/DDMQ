/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef CONSUMER_PROXY_TYPES_H
#define CONSUMER_PROXY_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>

/* custom thrift includes */

/* begin types */

/* struct Message */
struct _Message
{ 
  ThriftStruct parent; 

  /* public */
  gchar * key;
  gboolean __isset_key;
  GByteArray * value;
  gboolean __isset_value;
  gchar * tag;
  gboolean __isset_tag;
  gint64 offset;
  gboolean __isset_offset;
};
typedef struct _Message Message;

struct _MessageClass
{
  ThriftStructClass parent;
};
typedef struct _MessageClass MessageClass;

GType message_get_type (void);
#define TYPE_MESSAGE (message_get_type())
#define MESSAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MESSAGE, Message))
#define MESSAGE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_MESSAGE, MessageClass))
#define IS_MESSAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MESSAGE))
#define IS_MESSAGE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_MESSAGE))
#define MESSAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MESSAGE, MessageClass))

/* struct Context */
struct _Context
{ 
  ThriftStruct parent; 

  /* public */
  gchar * groupId;
  gboolean __isset_groupId;
  gchar * topic;
  gboolean __isset_topic;
  gchar * qid;
  gboolean __isset_qid;
};
typedef struct _Context Context;

struct _ContextClass
{
  ThriftStructClass parent;
};
typedef struct _ContextClass ContextClass;

GType context_get_type (void);
#define TYPE_CONTEXT (context_get_type())
#define CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONTEXT, Context))
#define CONTEXT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONTEXT, ContextClass))
#define IS_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONTEXT))
#define IS_CONTEXT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONTEXT))
#define CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONTEXT, ContextClass))

/* struct ConsumeResult */
struct _ConsumeResult
{ 
  ThriftStruct parent; 

  /* public */
  Context * context;
  gboolean __isset_context;
  GArray * successOffsets;
  gboolean __isset_successOffsets;
  GArray * failOffsets;
  gboolean __isset_failOffsets;
  ConsumeResult * nextResult;
  gboolean __isset_nextResult;
};
typedef struct _ConsumeResult ConsumeResult;

struct _ConsumeResultClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumeResultClass ConsumeResultClass;

GType consume_result_get_type (void);
#define TYPE_CONSUME_RESULT (consume_result_get_type())
#define CONSUME_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUME_RESULT, ConsumeResult))
#define CONSUME_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUME_RESULT, ConsumeResultClass))
#define IS_CONSUME_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUME_RESULT))
#define IS_CONSUME_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUME_RESULT))
#define CONSUME_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUME_RESULT, ConsumeResultClass))

/* struct PullRequest */
struct _PullRequest
{ 
  ThriftStruct parent; 

  /* public */
  gchar * groupId;
  gchar * topic;
  gboolean __isset_topic;
  gint32 maxBatchSize;
  gboolean __isset_maxBatchSize;
  gint32 maxLingerTime;
  gboolean __isset_maxLingerTime;
  ConsumeResult * result;
  gboolean __isset_result;
  gchar * version;
  gboolean __isset_version;
};
typedef struct _PullRequest PullRequest;

struct _PullRequestClass
{
  ThriftStructClass parent;
};
typedef struct _PullRequestClass PullRequestClass;

GType pull_request_get_type (void);
#define TYPE_PULL_REQUEST (pull_request_get_type())
#define PULL_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PULL_REQUEST, PullRequest))
#define PULL_REQUEST_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PULL_REQUEST, PullRequestClass))
#define IS_PULL_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PULL_REQUEST))
#define IS_PULL_REQUEST_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PULL_REQUEST))
#define PULL_REQUEST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PULL_REQUEST, PullRequestClass))

/* struct PullResponse */
struct _PullResponse
{ 
  ThriftStruct parent; 

  /* public */
  Context * context;
  gboolean __isset_context;
  GPtrArray * messages;
  gboolean __isset_messages;
};
typedef struct _PullResponse PullResponse;

struct _PullResponseClass
{
  ThriftStructClass parent;
};
typedef struct _PullResponseClass PullResponseClass;

GType pull_response_get_type (void);
#define TYPE_PULL_RESPONSE (pull_response_get_type())
#define PULL_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PULL_RESPONSE, PullResponse))
#define PULL_RESPONSE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PULL_RESPONSE, PullResponseClass))
#define IS_PULL_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PULL_RESPONSE))
#define IS_PULL_RESPONSE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PULL_RESPONSE))
#define PULL_RESPONSE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PULL_RESPONSE, PullResponseClass))

/* struct ConsumeStatsRequest */
struct _ConsumeStatsRequest
{ 
  ThriftStruct parent; 

  /* public */
  gchar * group;
  gchar * topic;
  gboolean __isset_topic;
  gchar * version;
  gboolean __isset_version;
};
typedef struct _ConsumeStatsRequest ConsumeStatsRequest;

struct _ConsumeStatsRequestClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumeStatsRequestClass ConsumeStatsRequestClass;

GType consume_stats_request_get_type (void);
#define TYPE_CONSUME_STATS_REQUEST (consume_stats_request_get_type())
#define CONSUME_STATS_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUME_STATS_REQUEST, ConsumeStatsRequest))
#define CONSUME_STATS_REQUEST_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUME_STATS_REQUEST, ConsumeStatsRequestClass))
#define IS_CONSUME_STATS_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUME_STATS_REQUEST))
#define IS_CONSUME_STATS_REQUEST_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUME_STATS_REQUEST))
#define CONSUME_STATS_REQUEST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUME_STATS_REQUEST, ConsumeStatsRequestClass))

/* struct FetchRequest */
struct _FetchRequest
{ 
  ThriftStruct parent; 

  /* public */
  gchar * consumerId;
  gchar * groupId;
  gchar * cluster;
  GHashTable * fetchOffset;
  gboolean __isset_fetchOffset;
  gint32 maxBatchSize;
  gboolean __isset_maxBatchSize;
  gint32 maxLingerTime;
  gboolean __isset_maxLingerTime;
  gchar * version;
  gboolean __isset_version;
};
typedef struct _FetchRequest FetchRequest;

struct _FetchRequestClass
{
  ThriftStructClass parent;
};
typedef struct _FetchRequestClass FetchRequestClass;

GType fetch_request_get_type (void);
#define TYPE_FETCH_REQUEST (fetch_request_get_type())
#define FETCH_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_FETCH_REQUEST, FetchRequest))
#define FETCH_REQUEST_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_FETCH_REQUEST, FetchRequestClass))
#define IS_FETCH_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_FETCH_REQUEST))
#define IS_FETCH_REQUEST_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_FETCH_REQUEST))
#define FETCH_REQUEST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_FETCH_REQUEST, FetchRequestClass))

/* struct QidResponse */
struct _QidResponse
{ 
  ThriftStruct parent; 

  /* public */
  gchar * topic;
  gchar * qid;
  gint64 nextRequestOffset;
  gboolean __isset_nextRequestOffset;
  GPtrArray * messages;
};
typedef struct _QidResponse QidResponse;

struct _QidResponseClass
{
  ThriftStructClass parent;
};
typedef struct _QidResponseClass QidResponseClass;

GType qid_response_get_type (void);
#define TYPE_QID_RESPONSE (qid_response_get_type())
#define QID_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_QID_RESPONSE, QidResponse))
#define QID_RESPONSE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_QID_RESPONSE, QidResponseClass))
#define IS_QID_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_QID_RESPONSE))
#define IS_QID_RESPONSE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_QID_RESPONSE))
#define QID_RESPONSE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_QID_RESPONSE, QidResponseClass))

/* struct FetchResponse */
struct _FetchResponse
{ 
  ThriftStruct parent; 

  /* public */
  gint32 code;
  gboolean __isset_code;
  GPtrArray * results;
};
typedef struct _FetchResponse FetchResponse;

struct _FetchResponseClass
{
  ThriftStructClass parent;
};
typedef struct _FetchResponseClass FetchResponseClass;

GType fetch_response_get_type (void);
#define TYPE_FETCH_RESPONSE (fetch_response_get_type())
#define FETCH_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_FETCH_RESPONSE, FetchResponse))
#define FETCH_RESPONSE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_FETCH_RESPONSE, FetchResponseClass))
#define IS_FETCH_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_FETCH_RESPONSE))
#define IS_FETCH_RESPONSE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_FETCH_RESPONSE))
#define FETCH_RESPONSE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_FETCH_RESPONSE, FetchResponseClass))

/* struct AckResult */
struct _AckResult
{ 
  ThriftStruct parent; 

  /* public */
  gchar * consumerId;
  gchar * groupId;
  gchar * cluster;
  GHashTable * offsets;
};
typedef struct _AckResult AckResult;

struct _AckResultClass
{
  ThriftStructClass parent;
};
typedef struct _AckResultClass AckResultClass;

GType ack_result_get_type (void);
#define TYPE_ACK_RESULT (ack_result_get_type())
#define ACK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ACK_RESULT, AckResult))
#define ACK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_ACK_RESULT, AckResultClass))
#define IS_ACK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ACK_RESULT))
#define IS_ACK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_ACK_RESULT))
#define ACK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ACK_RESULT, AckResultClass))

/* struct ConsumeStats */
struct _ConsumeStats
{ 
  ThriftStruct parent; 

  /* public */
  gchar * group;
  gboolean __isset_group;
  gchar * topic;
  gboolean __isset_topic;
  GHashTable * consumeOffsets;
  gboolean __isset_consumeOffsets;
  GHashTable * produceOffsets;
  gboolean __isset_produceOffsets;
};
typedef struct _ConsumeStats ConsumeStats;

struct _ConsumeStatsClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumeStatsClass ConsumeStatsClass;

GType consume_stats_get_type (void);
#define TYPE_CONSUME_STATS (consume_stats_get_type())
#define CONSUME_STATS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUME_STATS, ConsumeStats))
#define CONSUME_STATS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUME_STATS, ConsumeStatsClass))
#define IS_CONSUME_STATS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUME_STATS))
#define IS_CONSUME_STATS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUME_STATS))
#define CONSUME_STATS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUME_STATS, ConsumeStatsClass))

struct _PullException
{ 
  ThriftStruct parent; 

  /* public */
  gint32 code;
  gboolean __isset_code;
  gchar * message;
  gboolean __isset_message;
};
typedef struct _PullException PullException;

struct _PullExceptionClass
{
  ThriftStructClass parent;
};
typedef struct _PullExceptionClass PullExceptionClass;

GType pull_exception_get_type (void);
#define TYPE_PULL_EXCEPTION (pull_exception_get_type())
#define PULL_EXCEPTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PULL_EXCEPTION, PullException))
#define PULL_EXCEPTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PULL_EXCEPTION, PullExceptionClass))
#define IS_PULL_EXCEPTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PULL_EXCEPTION))
#define IS_PULL_EXCEPTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PULL_EXCEPTION))
#define PULL_EXCEPTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PULL_EXCEPTION, PullExceptionClass))

/* exception */
typedef enum
{
  PULL_EXCEPTION_ERROR_CODE,
} PullExceptionError;

GQuark pull_exception_error_quark (void);
#define PULL_EXCEPTION_ERROR (pull_exception_error_quark())


/* constants */

/* struct ConsumerServicePullArgs */
struct _ConsumerServicePullArgs
{ 
  ThriftStruct parent; 

  /* public */
  PullRequest * request;
  gboolean __isset_request;
};
typedef struct _ConsumerServicePullArgs ConsumerServicePullArgs;

struct _ConsumerServicePullArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServicePullArgsClass ConsumerServicePullArgsClass;

GType consumer_service_pull_args_get_type (void);
#define TYPE_CONSUMER_SERVICE_PULL_ARGS (consumer_service_pull_args_get_type())
#define CONSUMER_SERVICE_PULL_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_PULL_ARGS, ConsumerServicePullArgs))
#define CONSUMER_SERVICE_PULL_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_PULL_ARGS, ConsumerServicePullArgsClass))
#define IS_CONSUMER_SERVICE_PULL_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_PULL_ARGS))
#define IS_CONSUMER_SERVICE_PULL_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_PULL_ARGS))
#define CONSUMER_SERVICE_PULL_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_PULL_ARGS, ConsumerServicePullArgsClass))

/* struct ConsumerServicePullResult */
struct _ConsumerServicePullResult
{ 
  ThriftStruct parent; 

  /* public */
  PullResponse * success;
  gboolean __isset_success;
  PullException * error;
  gboolean __isset_error;
};
typedef struct _ConsumerServicePullResult ConsumerServicePullResult;

struct _ConsumerServicePullResultClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServicePullResultClass ConsumerServicePullResultClass;

GType consumer_service_pull_result_get_type (void);
#define TYPE_CONSUMER_SERVICE_PULL_RESULT (consumer_service_pull_result_get_type())
#define CONSUMER_SERVICE_PULL_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_PULL_RESULT, ConsumerServicePullResult))
#define CONSUMER_SERVICE_PULL_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_PULL_RESULT, ConsumerServicePullResultClass))
#define IS_CONSUMER_SERVICE_PULL_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_PULL_RESULT))
#define IS_CONSUMER_SERVICE_PULL_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_PULL_RESULT))
#define CONSUMER_SERVICE_PULL_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_PULL_RESULT, ConsumerServicePullResultClass))

/* struct ConsumerServiceSubmitArgs */
struct _ConsumerServiceSubmitArgs
{ 
  ThriftStruct parent; 

  /* public */
  ConsumeResult * result;
  gboolean __isset_result;
};
typedef struct _ConsumerServiceSubmitArgs ConsumerServiceSubmitArgs;

struct _ConsumerServiceSubmitArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServiceSubmitArgsClass ConsumerServiceSubmitArgsClass;

GType consumer_service_submit_args_get_type (void);
#define TYPE_CONSUMER_SERVICE_SUBMIT_ARGS (consumer_service_submit_args_get_type())
#define CONSUMER_SERVICE_SUBMIT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_SUBMIT_ARGS, ConsumerServiceSubmitArgs))
#define CONSUMER_SERVICE_SUBMIT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_SUBMIT_ARGS, ConsumerServiceSubmitArgsClass))
#define IS_CONSUMER_SERVICE_SUBMIT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_SUBMIT_ARGS))
#define IS_CONSUMER_SERVICE_SUBMIT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_SUBMIT_ARGS))
#define CONSUMER_SERVICE_SUBMIT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_SUBMIT_ARGS, ConsumerServiceSubmitArgsClass))

/* struct ConsumerServiceSubmitResult */
struct _ConsumerServiceSubmitResult
{ 
  ThriftStruct parent; 

  /* public */
  gboolean success;
  gboolean __isset_success;
  PullException * error;
  gboolean __isset_error;
};
typedef struct _ConsumerServiceSubmitResult ConsumerServiceSubmitResult;

struct _ConsumerServiceSubmitResultClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServiceSubmitResultClass ConsumerServiceSubmitResultClass;

GType consumer_service_submit_result_get_type (void);
#define TYPE_CONSUMER_SERVICE_SUBMIT_RESULT (consumer_service_submit_result_get_type())
#define CONSUMER_SERVICE_SUBMIT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_SUBMIT_RESULT, ConsumerServiceSubmitResult))
#define CONSUMER_SERVICE_SUBMIT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_SUBMIT_RESULT, ConsumerServiceSubmitResultClass))
#define IS_CONSUMER_SERVICE_SUBMIT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_SUBMIT_RESULT))
#define IS_CONSUMER_SERVICE_SUBMIT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_SUBMIT_RESULT))
#define CONSUMER_SERVICE_SUBMIT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_SUBMIT_RESULT, ConsumerServiceSubmitResultClass))

/* struct ConsumerServiceGetConsumeStatsArgs */
struct _ConsumerServiceGetConsumeStatsArgs
{ 
  ThriftStruct parent; 

  /* public */
  ConsumeStatsRequest * request;
  gboolean __isset_request;
};
typedef struct _ConsumerServiceGetConsumeStatsArgs ConsumerServiceGetConsumeStatsArgs;

struct _ConsumerServiceGetConsumeStatsArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServiceGetConsumeStatsArgsClass ConsumerServiceGetConsumeStatsArgsClass;

GType consumer_service_get_consume_stats_args_get_type (void);
#define TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS (consumer_service_get_consume_stats_args_get_type())
#define CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS, ConsumerServiceGetConsumeStatsArgs))
#define CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS, ConsumerServiceGetConsumeStatsArgsClass))
#define IS_CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS))
#define IS_CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS))
#define CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_ARGS, ConsumerServiceGetConsumeStatsArgsClass))

/* struct ConsumerServiceGetConsumeStatsResult */
struct _ConsumerServiceGetConsumeStatsResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  PullException * error;
  gboolean __isset_error;
};
typedef struct _ConsumerServiceGetConsumeStatsResult ConsumerServiceGetConsumeStatsResult;

struct _ConsumerServiceGetConsumeStatsResultClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServiceGetConsumeStatsResultClass ConsumerServiceGetConsumeStatsResultClass;

GType consumer_service_get_consume_stats_result_get_type (void);
#define TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT (consumer_service_get_consume_stats_result_get_type())
#define CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT, ConsumerServiceGetConsumeStatsResult))
#define CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT, ConsumerServiceGetConsumeStatsResultClass))
#define IS_CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT))
#define IS_CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT))
#define CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_GET_CONSUME_STATS_RESULT, ConsumerServiceGetConsumeStatsResultClass))

/* struct ConsumerServiceFetchArgs */
struct _ConsumerServiceFetchArgs
{ 
  ThriftStruct parent; 

  /* public */
  FetchRequest * request;
  gboolean __isset_request;
};
typedef struct _ConsumerServiceFetchArgs ConsumerServiceFetchArgs;

struct _ConsumerServiceFetchArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServiceFetchArgsClass ConsumerServiceFetchArgsClass;

GType consumer_service_fetch_args_get_type (void);
#define TYPE_CONSUMER_SERVICE_FETCH_ARGS (consumer_service_fetch_args_get_type())
#define CONSUMER_SERVICE_FETCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_FETCH_ARGS, ConsumerServiceFetchArgs))
#define CONSUMER_SERVICE_FETCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_FETCH_ARGS, ConsumerServiceFetchArgsClass))
#define IS_CONSUMER_SERVICE_FETCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_FETCH_ARGS))
#define IS_CONSUMER_SERVICE_FETCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_FETCH_ARGS))
#define CONSUMER_SERVICE_FETCH_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_FETCH_ARGS, ConsumerServiceFetchArgsClass))

/* struct ConsumerServiceFetchResult */
struct _ConsumerServiceFetchResult
{ 
  ThriftStruct parent; 

  /* public */
  FetchResponse * success;
  gboolean __isset_success;
};
typedef struct _ConsumerServiceFetchResult ConsumerServiceFetchResult;

struct _ConsumerServiceFetchResultClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServiceFetchResultClass ConsumerServiceFetchResultClass;

GType consumer_service_fetch_result_get_type (void);
#define TYPE_CONSUMER_SERVICE_FETCH_RESULT (consumer_service_fetch_result_get_type())
#define CONSUMER_SERVICE_FETCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_FETCH_RESULT, ConsumerServiceFetchResult))
#define CONSUMER_SERVICE_FETCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_FETCH_RESULT, ConsumerServiceFetchResultClass))
#define IS_CONSUMER_SERVICE_FETCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_FETCH_RESULT))
#define IS_CONSUMER_SERVICE_FETCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_FETCH_RESULT))
#define CONSUMER_SERVICE_FETCH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_FETCH_RESULT, ConsumerServiceFetchResultClass))

/* struct ConsumerServiceAckArgs */
struct _ConsumerServiceAckArgs
{ 
  ThriftStruct parent; 

  /* public */
  AckResult * result;
  gboolean __isset_result;
};
typedef struct _ConsumerServiceAckArgs ConsumerServiceAckArgs;

struct _ConsumerServiceAckArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServiceAckArgsClass ConsumerServiceAckArgsClass;

GType consumer_service_ack_args_get_type (void);
#define TYPE_CONSUMER_SERVICE_ACK_ARGS (consumer_service_ack_args_get_type())
#define CONSUMER_SERVICE_ACK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_ACK_ARGS, ConsumerServiceAckArgs))
#define CONSUMER_SERVICE_ACK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_ACK_ARGS, ConsumerServiceAckArgsClass))
#define IS_CONSUMER_SERVICE_ACK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_ACK_ARGS))
#define IS_CONSUMER_SERVICE_ACK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_ACK_ARGS))
#define CONSUMER_SERVICE_ACK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_ACK_ARGS, ConsumerServiceAckArgsClass))

/* struct ConsumerServiceAckResult */
struct _ConsumerServiceAckResult
{ 
  ThriftStruct parent; 

  /* public */
  gboolean success;
  gboolean __isset_success;
};
typedef struct _ConsumerServiceAckResult ConsumerServiceAckResult;

struct _ConsumerServiceAckResultClass
{
  ThriftStructClass parent;
};
typedef struct _ConsumerServiceAckResultClass ConsumerServiceAckResultClass;

GType consumer_service_ack_result_get_type (void);
#define TYPE_CONSUMER_SERVICE_ACK_RESULT (consumer_service_ack_result_get_type())
#define CONSUMER_SERVICE_ACK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CONSUMER_SERVICE_ACK_RESULT, ConsumerServiceAckResult))
#define CONSUMER_SERVICE_ACK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CONSUMER_SERVICE_ACK_RESULT, ConsumerServiceAckResultClass))
#define IS_CONSUMER_SERVICE_ACK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CONSUMER_SERVICE_ACK_RESULT))
#define IS_CONSUMER_SERVICE_ACK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CONSUMER_SERVICE_ACK_RESULT))
#define CONSUMER_SERVICE_ACK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CONSUMER_SERVICE_ACK_RESULT, ConsumerServiceAckResultClass))

#endif /* CONSUMER_PROXY_TYPES_H */
